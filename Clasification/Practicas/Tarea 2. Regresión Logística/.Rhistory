getwd()
data <- read.table("data.xlsx")
data <- read.table("data.xlsx", header = TRUE)
data <- read.table("data.xlsx", header = TRUE, dec = ",")
data <- read.table("data.xlsx", dec = ",")
data <- read.table("data.csv", dec = ",")
data <- read.xlsx("data.xlsx", sheetIndex = 1)
library("openxlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data <- read.xlsx("data.xlsx", sheetIndex = 1)
data <- read.xlsx("data.xlsx")
View(data)
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Adults", "Gender_older", "Occupation")
data <- read.xlsx("data.xlsx") #We charge the rough data and start working on it.
data1 <- data
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Adults", "Gender_older", "Occupation")
View(data1)
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Workinh_hours" "Adults", "Gender_older", "Occupation")
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Workinh_hours", "Adults", "Gender_older", "Occupation")
dim(data)
str(data)
data <- data[,-1]
data$Poverty_risk <- factor(data$Poverty_risk, levels = c(1,2), labels = c("Sí", "No"))
View(data1)
data <- read.xlsx("data.xlsx") #We charge the rough data and start working on it.
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Workinh_hours", "Adults",
"Gender_older", "Occupation")
dim(data) #We have 418 homes in this study in which 18 variables are observed.
str(data) #All data has been loades as numeric.
data <- data[,-1]
data$Poverty_risk <- factor(data$Poverty_risk, levels = c(1,0), labels = c("Sí", "No"))
data <- data[, -"Rent"]
data <- data[, -10]
as.factor(data$Holidays)
str(data)
data$holidays <- as.factor(data$Holidays)
str(data)
data$Holidays <- as.factor(data$Holidays)
str(data)
# ASSIGNMENT 2. LOGISTIC REGRESSION
#Author: Arturo Sánchez Palacio
# Date: 9/XII/18
#The assignment works on a database extracted from 2016 Spanish Survey of Life Conditions.
# The goal of this assignment is to find out which families are in risk of poverty and why. (Which variables are responsible?)
#Firstly, we load the data in R:
setwd("/Users/arturosanchezpalacio/Documents/CUNEF/Clasificación/Tareas/Tarea 2. Regresión Logística") #We set the working directory
library(openxlsx) #This library is required to read from an Excel file.
data <- read.xlsx("data.xlsx") #We charge the rough data and start working on it.
#We give the variables proper names:
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Workinh_hours", "Adults",
"Gender_older", "Occupation")
#We have a first glance at the data:
dim(data) #We have 418 homes in this study in which 18 variables are observed.
str(data) #All data has been loades as numeric.
#The ID does not give any interesting information:
data <- data[,-1]
#Poverty_risk is the variable we are going to try to classify:
data$Poverty_risk <- factor(data$Poverty_risk, levels = c(1,0), labels = c("Sí", "No"))
#This index is built upon the rent so it makes no sense to use the rent to predict it.  (It would be
# a circular definition so we erase this variable too)
data <- data[, -10]
# Some variables must be translated to factors:
data$Holidays <- as.factor(data$Holidays)
str(data)
data$Unexpected_expenses <- as.factor(data$Unexpected_expenses)
data$TV <- as.factor(data$TV)
data$Computer <- as.factor(data$Computer)
str(data)
data$Ends_meet <- as.factor(data$Ends_meet)
data$Home <- as.factor(data$Home)
str(data)
unique(data$Region)
data$Occupation <- as.factor(data$Occupation)
data$Gender_older <- factor(data$Gender_older, levels = c(0,1), labels = c("Mujer", "Hombre"))
data$Region <- factor(data$Region, levels = c("ES21", "ES42", "ES52", "ES61", "ES41", "ES43", "ES53", "ES51",
"ES11", "ES23", "ES30", "ES62", "ES22", "ES12", "ES70", "ES13", "ES24", "ES64", "ES63"),
labels = c("País Vasco", "Castilla la Mancha", "C. Valenciana", "Andalucía", "Castilla León",
"Extremandura", "Baleares", "Cataluña", "Galicia", "Rioja", "Madrid", "Murcia",
"Navarra", "Asturias", "Canarias", "Cantabria", "Aragón", "Melilla", "Ceuta"))
str(data)
sapply(data,function(x) sum(is.na(x)))
train <- sample(nrow(data), 0.7*nrow(data))
data.train <- data[train,]
data.validate <- data[-train,]
table(data.train$Poverty_risk)
table(data.validate$Poverty_risk)
set.seed(1234)
train <- sample(nrow(data), 0.7*nrow(data))
data.train <- data[train,]
data.validate <- data[-train,]
table(data.train$Poverty_risk)
table(data.validate$Poverty_risk)
model <- glm(Poverty_risk ~.,family = binomial(link = 'logit'),data = data.train)
View(data.train)
summary(model1)
model1 <- glm(Poverty_risk ~.,family = binomial(link = 'logit'),data = data.train)
summary(model1)
model2 <- glm(Poverty_risk ~ -Region,family = binomial(link = 'logit'),data = data.train)
summary(model2)
model2 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet,family = binomial(link = 'logit'),data = data.train)
summary(model2)
model3 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Holidays,family = binomial(link = 'logit'),data = data.train)
summary(model3)
model3 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses,family = binomial(link = 'logit'),data = data.train)
summary(model3)
contrast(Unexpected_expenses)
contrasts(Unexpected_expenses)
contrasts(data$Unexpected_expenses)
contrasts(data$Unexpected_expenses2)
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Working_hours", "Adults",
"Gender_older", "Occupation")
# ASSIGNMENT 2. LOGISTIC REGRESSION
#Author: Arturo Sánchez Palacio
# Date: 9/XII/18
#The assignment works on a database extracted from 2016 Spanish Survey of Life Conditions.
# The goal of this assignment is to find out which families are in risk of poverty and why. (Which variables are responsible?)
#Firstly, we load the data in R:
setwd("/Users/arturosanchezpalacio/Documents/CUNEF/Clasificación/Tareas/Tarea 2. Regresión Logística") #We set the working directory
library(openxlsx) #This library is required to read from an Excel file.
data <- read.xlsx("data.xlsx") #We charge the rough data and start working on it.
#We give the variables proper names:
names(data) <- c("ID", "Aid", "Minors_rent", "Holidays", "Unexpected_expenses", "TV", "Computer", "Ends_meet",
"Home", "Members", "Rent", "Poverty_risk", "Region", "Age_older", "Working_hours", "Adults",
"Gender_older", "Occupation")
#We have a first glance at the data:
dim(data) #We have 418 homes in this study in which 18 variables are observed.
str(data) #All data has been loades as numeric.
#The ID does not give any interesting information:
data <- data[,-1]
#Poverty_risk is the variable we are going to try to classify:
data$Poverty_risk <- factor(data$Poverty_risk, levels = c(1,0), labels = c("Sí", "No"))
#This index is built upon the rent so it makes no sense to use the rent to predict it.  (It would be
# a circular definition so we erase this variable too)
data <- data[, -10]
# Some variables must be translated to factors:
data$Holidays <- as.factor(data$Holidays)
data$Unexpected_expenses <- as.factor(data$Unexpected_expenses)
data$TV <- as.factor(data$TV)
data$Computer <- as.factor(data$Computer)
data$Ends_meet <- as.factor(data$Ends_meet)
data$Home <- as.factor(data$Home)
data$Occupation <- as.factor(data$Occupation)
data$Gender_older <- factor(data$Gender_older, levels = c(0,1), labels = c("Mujer", "Hombre"))
data$Region <- factor(data$Region, levels = c("ES21", "ES42", "ES52", "ES61", "ES41", "ES43", "ES53", "ES51",
"ES11", "ES23", "ES30", "ES62", "ES22", "ES12", "ES70", "ES13", "ES24", "ES64", "ES63"),
labels = c("País Vasco", "Castilla la Mancha", "C. Valenciana", "Andalucía", "Castilla León",
"Extremandura", "Baleares", "Cataluña", "Galicia", "Rioja", "Madrid", "Murcia",
"Navarra", "Asturias", "Canarias", "Cantabria", "Aragón", "Melilla", "Ceuta"))
str(data) #Now the data seems like something we can work with
sapply(data,function(x) sum(is.na(x))) #There are no unknown values in this dataset.
# We set a seed in order to be able to replicate the experiment:
set.seed(1234)
# We split the data into two chunks: training and testing set.
#The training set will be used to fit our model which we will be testing over the testing set.
train <- sample(nrow(data), 0.7*nrow(data))
data.train <- data[train,]
data.validate <- data[-train,]
#We check that the samples are balanced:
table(data.train$Poverty_risk)
table(data.validate$Poverty_risk)
model1 <- glm(Poverty_risk ~.,family = binomial(link = 'logit'),data = data.train)
summary(model1)
#Regions don't seem important at all. How troubled is to make ends meet, the occupation and the number of members
#seem like essential facts.
model2 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet,family = binomial(link = 'logit'),data = data.train)
summary(model2)
#The AIC is lower so by simplifying the regression we have also improved it.
model3 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses,family = binomial(link = 'logit'),data = data.train)
summary(model3)
model4 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Aid,family = binomial(link = 'logit'),data = data.train)
summary(model4)
model4 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Minors_rent,family = binomial(link = 'logit'),data = data.train)
summary(model4)
model4 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home,family = binomial(link = 'logit'),data = data.train)
summary(model4)
constrasts(data$Home)
contrasts(data$Home)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Working_Hours ,family = binomial(link = 'logit'),data = data.train)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Working_hours ,family = binomial(link = 'logit'),data = data.train)
summary(model5)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Members ,family = binomial(link = 'logit'),data = data.train)
summary(model5)
summary(model4)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Age_Older ,family = binomial(link = 'logit'),data = data.train)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Age_older ,family = binomial(link = 'logit'),data = data.train)
summary(model5)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Adults ,family = binomial(link = 'logit'),data = data.train)
summary(model5)
model5 <- glm(Poverty_risk ~ Occupation + Members + Ends_meet + Unexpected_expenses + Home + Gender_older ,family = binomial(link = 'logit'),data = data.train)
summary(model5)
anova(model4, test = "Chisq")
library(pscl)
pR2(model4)
fit.logit <- model4
prob <- predict(fit.logit, data.validate, type = "response")
logit.pred <- factor(prob > .5, levels = c(1, 0), labels = c("Riesgo", "Sin riesgo"))
(logit.perf <- table(data.validate$Poverty_risk, logit.pred, dnn = c("Actual", "Predicted")))
fit.logit <- model4
prob <- predict(fit.logit, data.validate, type = "response")
logit.pred <- factor(prob > .5, levels = c(1, 0), labels = c("Riesgo", "Sin riesgo"))
(logit.perf <- table(data.validate$Poverty_risk, logit.pred, dnn = c("Actual", "Predicted")))
prob
data.validate$Poverty_risk
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
misClasificError <- mean(fitted.results != data.validate$Poverty_risk)
print(paste('Accuracy',1 - misClasificError))
print(paste('Accuracy',105/144))
sum(logit.perf)
trace(logit.perf)
tr(logit.perf)
diag(logit.perf)
print(paste('Accuracy',sum(diag(logit.perf))/sum(logit.perf)))
fitted.results
fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
fitted.results
fitted.results <- ifelse(fitted.results < 0.5,1,0)
fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
##COMPROBAR FINAL
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
#fitted.results <- ifelse(fitted.results < 0.5,1,0)
#fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
fitted.results <- factor(prob > .5, levels = c(0, 1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
#fitted.results <- ifelse(fitted.results < 0.5,1,0)
#fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
fitted.results <- factor(fitted.results > .5, levels = c(0, 1), labels = c("No", "Sí"))
##COMPROBAR FINAL
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
#fitted.results <- ifelse(fitted.results < 0.5,1,0)
#fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
fitted.results <- factor(fitted.results > .5, levels = c(0, 1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
fitted.results <- ifelse(fitted.results < 0.5,1,0)
fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("No", "Sí"))
#fitted.results <- factor(fitted.results > .5, levels = c(0, 1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
fit.logit <- model4
##COMPROBAR FINAL
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
##COMPROBAR FINAL
fitted.results
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results <- factor(fitted.results, levels = c(1,0), labels = c("No", "Sí"))
#fitted.results <- factor(fitted.results > .5, levels = c(0, 1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
fitted.results <- predict(model4, newdata = data.validate, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results <- factor(fitted.results, levels = c(0,1), labels = c("Sí", "No"))
#fitted.results <- factor(fitted.results > .5, levels = c(0, 1), labels = c("No", "Sí"))
(logit.perf <- table(data.validate$Poverty_risk, fitted.results, dnn = c("Actual", "Predicted")))
print(paste('Accuracy',sum(diag(logit.perf))/sum(logit.perf)))
